{"ast":null,"code":"var _jsxFileName = \"/home/alisson/Desktop/Projetos/TriviaVercel/src/pages/Feedback.jsx\";\nimport md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { newGame } from '../Redux/Actions';\nimport styles from '../styles/Feedback.module.css';\n\nclass Feedback extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.addToLocalStorage = () => {\n      const currentRanking = JSON.parse(localStorage.getItem('ranking'));\n\n      if (currentRanking) {\n        const {\n          score,\n          playerName,\n          gravatarEmail\n        } = this.props;\n        const hashEmail = md5(gravatarEmail).toString();\n        const picture = `https://www.gravatar.com/avatar/${hashEmail}`;\n        const newPlayer = {\n          name: playerName,\n          score,\n          picture\n        };\n        const ranking = [...currentRanking, newPlayer];\n        localStorage.setItem('ranking', JSON.stringify(ranking));\n      } else {\n        const {\n          score,\n          playerName,\n          gravatarEmail\n        } = this.props;\n        const hashEmail = md5(gravatarEmail).toString();\n        const picture = `https://www.gravatar.com/avatar/${hashEmail}`;\n        const newPlayer = [{\n          name: playerName,\n          score,\n          picture\n        }];\n        localStorage.setItem('ranking', JSON.stringify(newPlayer));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.addToLocalStorage();\n  }\n\n  render() {\n    const {\n      assertions,\n      score,\n      playAgain\n    } = this.props;\n    const TRES = 3;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `${styles['feedback-container']}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"audio\", {\n      src: \"https://www.myinstants.com/media/sounds/victoryff.swf.mp3\",\n      autoPlay: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${styles['message-container']} col-8 m-auto mt-5`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `${styles['result-message']} col-8 mx-auto mb-5`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, assertions < TRES ? /*#__PURE__*/React.createElement(\"h1\", {\n      \"data-testid\": \"feedback-text\",\n      className: `${styles['message-text']}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"Could be better...\") : /*#__PURE__*/React.createElement(\"h1\", {\n      \"data-testid\": \"feedback-text\",\n      className: `${styles['message-text']}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"Well Done!\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${styles['result-container']} col-8 mx-auto mb-5`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `${styles['score-container']} col-10 mx-auto`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: `${styles['h3-title']}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, \"Score:\"), /*#__PURE__*/React.createElement(\"h3\", {\n      \"data-testid\": \"feedback-total-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, score)), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${styles['assertions-container']} col-10 mx-auto`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: `${styles['h3-title']}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, \"Assertions:\"), /*#__PURE__*/React.createElement(\"h3\", {\n      \"data-testid\": \"feedback-total-question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, assertions))), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${styles['buttons-container']}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-play-again\",\n      onClick: playAgain,\n      className: `${styles.button}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, \"Play Again\")), /*#__PURE__*/React.createElement(Link, {\n      to: \"/ranking\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-ranking\",\n      className: `${styles.button}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, \"Ranking\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  assertions: state.player.assertions,\n  score: state.player.score,\n  playerName: state.player.name,\n  gravatarEmail: state.player.gravatarEmail\n});\n\nconst mapDispatchToProps = dispatch => ({\n  playAgain: () => dispatch(newGame())\n});\n\nFeedback.propTypes = {\n  assertions: PropTypes.number,\n  score: PropTypes.number\n}.isRequired;\nexport default connect(mapStateToProps, mapDispatchToProps)(Feedback);","map":{"version":3,"sources":["/home/alisson/Desktop/Projetos/TriviaVercel/src/pages/Feedback.jsx"],"names":["md5","PropTypes","React","Component","connect","Link","Header","newGame","styles","Feedback","addToLocalStorage","currentRanking","JSON","parse","localStorage","getItem","score","playerName","gravatarEmail","props","hashEmail","toString","picture","newPlayer","name","ranking","setItem","stringify","componentDidMount","render","assertions","playAgain","TRES","button","mapStateToProps","state","player","mapDispatchToProps","dispatch","propTypes","number","isRequired"],"mappings":"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","sourcesContent":["import md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { newGame } from '../Redux/Actions';\nimport styles from '../styles/Feedback.module.css';\n\nclass Feedback extends Component {\n  componentDidMount() {\n    this.addToLocalStorage();\n  }\n\n  addToLocalStorage = () => {\n    const currentRanking = JSON.parse(localStorage.getItem('ranking'));\n    if (currentRanking) {\n      const { score, playerName, gravatarEmail } = this.props;\n      const hashEmail = md5(gravatarEmail).toString();\n      const picture = `https://www.gravatar.com/avatar/${hashEmail}`;\n      const newPlayer = {\n        name: playerName,\n        score,\n        picture,\n      };\n      const ranking = [...currentRanking, newPlayer];\n      localStorage.setItem('ranking', JSON.stringify(ranking));\n    } else {\n      const { score, playerName, gravatarEmail } = this.props;\n      const hashEmail = md5(gravatarEmail).toString();\n      const picture = `https://www.gravatar.com/avatar/${hashEmail}`;\n      const newPlayer = [{\n        name: playerName,\n        score,\n        picture,\n      }];\n      localStorage.setItem('ranking', JSON.stringify(newPlayer));\n    }\n  }\n\n  render() {\n    const { assertions, score, playAgain } = this.props;\n    const TRES = 3;\n    return (\n      <div className={ `${styles['feedback-container']}` }>\n        <Header />\n        <audio src=\"https://www.myinstants.com/media/sounds/victoryff.swf.mp3\" autoPlay={true} />\n        <div className={ `${styles['message-container']} col-8 m-auto mt-5` }>\n          <div className={ `${styles['result-message']} col-8 mx-auto mb-5` }>\n            { assertions < TRES\n              ? (\n                <h1\n                  data-testid=\"feedback-text\"\n                  className={ `${styles['message-text']}` }\n                >\n                  Could be better...\n                </h1>\n              ) : (\n                <h1\n                  data-testid=\"feedback-text\"\n                  className={ `${styles['message-text']}` }\n                >\n                  Well Done!\n                </h1>\n              )}\n          </div>\n          <div className={ `${styles['result-container']} col-8 mx-auto mb-5` }>\n            <div className={ `${styles['score-container']} col-10 mx-auto` }>\n              <h3 className={ `${styles['h3-title']}` }>Score:</h3>\n              <h3 data-testid=\"feedback-total-score\">{score}</h3>\n            </div>\n            <div className={ `${styles['assertions-container']} col-10 mx-auto` }>\n              <h3 className={ `${styles['h3-title']}` }>Assertions:</h3>\n              <h3 data-testid=\"feedback-total-question\">{assertions}</h3>\n            </div>\n          </div>\n          <div className={ `${styles['buttons-container']}` }>\n            <Link to=\"/\">\n              <button\n                type=\"button\"\n                data-testid=\"btn-play-again\"\n                onClick={ playAgain }\n                className={ `${styles.button}` }\n              >\n                Play Again\n              </button>\n            </Link>\n            <Link to=\"/ranking\">\n              <button\n                type=\"button\"\n                data-testid=\"btn-ranking\"\n                className={ `${styles.button}` }\n              >\n                Ranking\n              </button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  assertions: state.player.assertions,\n  score: state.player.score,\n  playerName: state.player.name,\n  gravatarEmail: state.player.gravatarEmail,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  playAgain: () => dispatch(newGame()),\n});\n\nFeedback.propTypes = {\n  assertions: PropTypes.number,\n  score: PropTypes.number,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Feedback);\n"]},"metadata":{},"sourceType":"module"}