{"ast":null,"code":"var _jsxFileName = \"/home/alisson/Desktop/Projetos/sd-019-a-project-trivia-react-redux/src/pages/Login.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport logo from '../trivia.png';\nimport '../App.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.onInputChange = _ref => {\n      let {\n        target\n      } = _ref;\n      this.setState({\n        [target.name]: target.value\n      }, this.validateButton);\n    };\n\n    this.buttonValidation = () => {\n      const {\n        email,\n        nome\n      } = this.state;\n      return !(email && nome);\n    };\n\n    this.state = {\n      email: '',\n      name: '',\n      isButtonDisabled: true\n    };\n  } // validateButton = () => {\n  //   const { email, name } = this.state;\n  //   const minPasswordLength = 0;\n  //   // Regex encontrado no link: https://www.w3resource.com/javascript/form/email-validation.php\n  //   const emailFormatRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n  //   if (name.length > minPasswordLength && email.match(emailFormatRegex)) {\n  //     this.setState({\n  //       isButtonDisabled: false,\n  //     });\n  //   } else {\n  //     this.setState({\n  //       isButtonDisabled: true,\n  //     });\n  //   }\n  // }\n\n\n  render() {\n    const {\n      email,\n      name\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"nameInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      \"data-testid\": \"input-player-name\",\n      id: \"nameInput\",\n      value: name,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"gravatarEmailInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      id: \"gravatarEmailInput\",\n      \"data-testid\": \"input-gravatar-email\",\n      onChange: this.onInputChange,\n      value: email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      disabled: this.buttonValidation(),\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, \"Play\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/alisson/Desktop/Projetos/sd-019-a-project-trivia-react-redux/src/pages/Login.jsx"],"names":["React","PropTypes","connect","logo","Login","Component","constructor","onInputChange","target","setState","name","value","validateButton","buttonValidation","email","nome","state","isButtonDisabled","render","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAO,YAAP;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SA0BhBC,aA1BgB,GA0BA,QAAgB;AAAA,UAAf;AAAEC,QAAAA;AAAF,OAAe;AAC9B,WAAKC,QAAL,CAAc;AAAE,SAACD,MAAM,CAACE,IAAR,GAAeF,MAAM,CAACG;AAAxB,OAAd,EAA+C,KAAKC,cAApD;AACD,KA5Be;;AAAA,SA8BhBC,gBA9BgB,GA8BG,MAAM;AACvB,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAkB,KAAKC,KAA7B;AACA,aAAO,EAAEF,KAAK,IAAIC,IAAX,CAAP;AACD,KAjCe;;AAGZ,SAAKC,KAAL,GAAa;AACXF,MAAAA,KAAK,EAAE,EADI;AAEXJ,MAAAA,IAAI,EAAE,EAFK;AAGXO,MAAAA,gBAAgB,EAAE;AAHP,KAAb;AAKD,GATiC,CAWlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAWFC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA,KAAF;AAASJ,MAAAA;AAAT,QAAkB,KAAKM,KAA7B;AACA,wBACE,uDAKE;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,qBAAY,mBAHd;AAIE,MAAA,EAAE,EAAC,WAJL;AAKE,MAAA,KAAK,EAAGN,IALV;AAME,MAAA,QAAQ,EAAG,KAAKH,aANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,eAgBE;AAAO,MAAA,OAAO,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,EAAE,EAAC,oBAHL;AAIE,qBAAY,sBAJd;AAKE,MAAA,QAAQ,EAAG,KAAKA,aALlB;AAME,MAAA,KAAK,EAAGO,KANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAhBF,eA2BE;AACE,MAAA,QAAQ,EAAG,KAAKD,gBAAL,EADb;AAEE,MAAA,IAAI,EAAC,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BF,CADF;AAoCD;;AA1EmC;;AA6EpC,MAAMM,kBAAkB,GAAIC,QAAD,KAAe,EAAf,CAA3B;;AAIA,eAAelB,OAAO,CAAC,IAAD,EAAOiB,kBAAP,CAAP,CAAkCf,KAAlC,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport logo from '../trivia.png';\nimport '../App.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      name: '',\n      isButtonDisabled: true,\n    };\n  }\n\n  // validateButton = () => {\n  //   const { email, name } = this.state;\n  //   const minPasswordLength = 0;\n  //   // Regex encontrado no link: https://www.w3resource.com/javascript/form/email-validation.php\n  //   const emailFormatRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n  //   if (name.length > minPasswordLength && email.match(emailFormatRegex)) {\n  //     this.setState({\n  //       isButtonDisabled: false,\n  //     });\n  //   } else {\n  //     this.setState({\n  //       isButtonDisabled: true,\n  //     });\n  //   }\n  // }\n\nonInputChange = ({ target }) => {\n  this.setState({ [target.name]: target.value }, this.validateButton);\n}\n\nbuttonValidation = () => {\n  const { email, nome } = this.state;\n  return !(email && nome);\n}\n\nrender() {\n  const { email, name } = this.state;\n  return (\n    <>\n      {/* <header className=\"App-header\">\n          <img src={ logo } className=\"App-logo\" alt=\"logo\" />\n        </header> */}\n\n      <label htmlFor=\"nameInput\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          data-testid=\"input-player-name\"\n          id=\"nameInput\"\n          value={ name }\n          onChange={ this.onInputChange }\n        />\n      </label>\n\n      <label htmlFor=\"gravatarEmailInput\">\n        <input\n          type=\"email\"\n          name=\"email\"\n          id=\"gravatarEmailInput\"\n          data-testid=\"input-gravatar-email\"\n          onChange={ this.onInputChange }\n          value={ email }\n        />\n      </label>\n\n      <button\n        disabled={ this.buttonValidation() }\n        type=\"button\"\n      >\n        Play\n      </button>\n    </>\n  );\n}\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}