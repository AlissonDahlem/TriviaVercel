{"ast":null,"code":"export function failedRequest(error) {\n  return {\n    type: 'FAILED_REQUEST',\n    payload: error\n  };\n}\n\nfunction getToken(json) {\n  return {\n    type: 'GET_TOKEN',\n    payload: json.token\n  };\n}\n\nfunction getGameInfo(json) {\n  return {\n    type: 'GET_GAME_INFO',\n    payload: json.results\n  };\n}\n\nexport function fetchToken() {\n  return dispatch => fetch('https://opentdb.com/api_token.php?command=request').then(response => response.json()).then(json => dispatch(getToken(json))).then(result => fetch(`https://opentdb.com/api.php?amount=5&token=${result.payload}`)).then(response => response.json()).then(json => dispatch(getGameInfo(json))).catch(error => dispatch(failedRequest(error)));\n}\nexport const gravatarAction = gravatar => ({\n  type: 'gravatarImg',\n  gravatar\n});\nexport const nameAction = name => ({\n  type: 'name',\n  name\n});\nexport function setTimer(timer) {\n  return {\n    type: 'SET_TIMER',\n    payload: timer\n  };\n}\nexport function addScore(score) {\n  return {\n    type: 'ADD_SCORE',\n    payload: score\n  };\n}\nexport function nextQuestion(question) {\n  return {\n    type: 'NEXT_QUESTION',\n    payload: question\n  };\n}\nexport function answerQuestion() {\n  return {\n    type: 'ANSWERED'\n  };\n}\nexport function addQtdCorrectAnswers(answer) {\n  return {\n    type: 'ADD_CORRECT_ANSWER',\n    payload: answer\n  };\n}\nexport function newGame() {\n  return {\n    type: 'NEW_GAME'\n  };\n}","map":{"version":3,"sources":["/home/alisson/Desktop/Projetos/sd-019-a-project-trivia-react-redux/src/Redux/Actions/index.js"],"names":["failedRequest","error","type","payload","getToken","json","token","getGameInfo","results","fetchToken","dispatch","fetch","then","response","result","catch","gravatarAction","gravatar","nameAction","name","setTimer","timer","addScore","score","nextQuestion","question","answerQuestion","addQtdCorrectAnswers","answer","newGame"],"mappings":"AAAA,OAAO,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;AACnC,SAAO;AAAEC,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,OAAO,EAAEF;AAAnC,GAAP;AACD;;AAED,SAASG,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAO;AAAEH,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,OAAO,EAAEE,IAAI,CAACC;AAAnC,GAAP;AACD;;AAED,SAASC,WAAT,CAAqBF,IAArB,EAA2B;AACzB,SAAO;AAAEH,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,OAAO,EAAEE,IAAI,CAACG;AAAvC,GAAP;AACD;;AAED,OAAO,SAASC,UAAT,GAAsB;AAC3B,SAAQC,QAAD,IACLC,KAAK,CAAC,mDAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACR,IAAT,EADtB,EAEGO,IAFH,CAESP,IAAD,IAAUK,QAAQ,CAACN,QAAQ,CAACC,IAAD,CAAT,CAF1B,EAGGO,IAHH,CAGSE,MAAD,IAAYH,KAAK,CAAE,8CAA6CG,MAAM,CAACX,OAAQ,EAA9D,CAHzB,EAIGS,IAJH,CAISC,QAAD,IAAcA,QAAQ,CAACR,IAAT,EAJtB,EAKGO,IALH,CAKSP,IAAD,IAAUK,QAAQ,CAACH,WAAW,CAACF,IAAD,CAAZ,CAL1B,EAMGU,KANH,CAMUd,KAAD,IAAWS,QAAQ,CAACV,aAAa,CAACC,KAAD,CAAd,CAN5B,CADF;AAQD;AAED,OAAO,MAAMe,cAAc,GAAIC,QAAD,KAAe;AAC3Cf,EAAAA,IAAI,EAAE,aADqC;AAE3Ce,EAAAA;AAF2C,CAAf,CAAvB;AAKP,OAAO,MAAMC,UAAU,GAAIC,IAAD,KAAW;AACnCjB,EAAAA,IAAI,EAAE,MAD6B;AAEnCiB,EAAAA;AAFmC,CAAX,CAAnB;AAKP,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAC9B,SAAO;AAAEnB,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,OAAO,EAAEkB;AAA9B,GAAP;AACD;AAED,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAC9B,SAAO;AAAErB,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,OAAO,EAAEoB;AAA9B,GAAP;AACD;AAED,OAAO,SAASC,YAAT,CAAsBC,QAAtB,EAAgC;AACrC,SAAO;AAAEvB,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,OAAO,EAAEsB;AAAlC,GAAP;AACD;AAED,OAAO,SAASC,cAAT,GAA0B;AAC/B,SAAO;AAAExB,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD;AAED,OAAO,SAASyB,oBAAT,CAA8BC,MAA9B,EAAsC;AAC3C,SAAO;AAAE1B,IAAAA,IAAI,EAAE,oBAAR;AAA8BC,IAAAA,OAAO,EAAEyB;AAAvC,GAAP;AACD;AAED,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAO;AAAE3B,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD","sourcesContent":["export function failedRequest(error) {\n  return { type: 'FAILED_REQUEST', payload: error };\n}\n\nfunction getToken(json) {\n  return { type: 'GET_TOKEN', payload: json.token };\n}\n\nfunction getGameInfo(json) {\n  return { type: 'GET_GAME_INFO', payload: json.results };\n}\n\nexport function fetchToken() {\n  return (dispatch) => (\n    fetch('https://opentdb.com/api_token.php?command=request')\n      .then((response) => response.json())\n      .then((json) => dispatch(getToken(json)))\n      .then((result) => fetch(`https://opentdb.com/api.php?amount=5&token=${result.payload}`))\n      .then((response) => response.json())\n      .then((json) => dispatch(getGameInfo(json)))\n      .catch((error) => dispatch(failedRequest(error))));\n}\n\nexport const gravatarAction = (gravatar) => ({\n  type: 'gravatarImg',\n  gravatar,\n});\n\nexport const nameAction = (name) => ({\n  type: 'name',\n  name,\n});\n\nexport function setTimer(timer) {\n  return { type: 'SET_TIMER', payload: timer };\n}\n\nexport function addScore(score) {\n  return { type: 'ADD_SCORE', payload: score };\n}\n\nexport function nextQuestion(question) {\n  return { type: 'NEXT_QUESTION', payload: question };\n}\n\nexport function answerQuestion() {\n  return { type: 'ANSWERED' };\n}\n\nexport function addQtdCorrectAnswers(answer) {\n  return { type: 'ADD_CORRECT_ANSWER', payload: answer };\n}\n\nexport function newGame() {\n  return { type: 'NEW_GAME' };\n}\n"]},"metadata":{},"sourceType":"module"}