{"ast":null,"code":"var _jsxFileName = \"/home/alisson/Desktop/Projetos/TriviaVercel/src/pages/Game.jsx\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport Question from '../components/Question';\nimport Timer from '../components/Timer';\nimport styles from '../styles/Game.module.css';\n\nclass Game extends Component {\n  render() {\n    const {\n      answered\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `${styles['game-container']}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${styles['timer-container']}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, answered === 'respondido' ? /*#__PURE__*/React.createElement(\"span\", {\n      className: `${styles['timer-background']}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, \"0\") : /*#__PURE__*/React.createElement(Timer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 24\n      }\n    })), /*#__PURE__*/React.createElement(Question, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  answered: state.game.answered\n});\n\nGame.propTypes = {\n  results: PropTypes.arrayOf(PropTypes.any)\n}.isRequired;\nexport default connect(mapStateToProps)(Game);","map":{"version":3,"sources":["/home/alisson/Desktop/Projetos/TriviaVercel/src/pages/Game.jsx"],"names":["PropTypes","React","Component","connect","Header","Question","Timer","styles","Game","render","answered","props","mapStateToProps","state","game","propTypes","results","arrayOf","any","isRequired"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;AAEA,MAAMC,IAAN,SAAmBN,SAAnB,CAA6B;AAC3BO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,wBACE;AAAK,MAAA,SAAS,EAAI,GAAEJ,MAAM,CAAC,gBAAD,CAAmB,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAI,GAAEA,MAAM,CAAC,iBAAD,CAAoB,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGG,QAAQ,KAAK,YAAb,gBACC;AAAM,MAAA,SAAS,EAAI,GAAEH,MAAM,CAAC,kBAAD,CAAqB,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADD,gBAGY,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJf,CAFF,eAQE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAYD;;AAf0B;;AAkB7B,MAAMK,eAAe,GAAIC,KAAD,KAAY;AAClCH,EAAAA,QAAQ,EAAEG,KAAK,CAACC,IAAN,CAAWJ;AADa,CAAZ,CAAxB;;AAIAF,IAAI,CAACO,SAAL,GAAiB;AACfC,EAAAA,OAAO,EAAEhB,SAAS,CAACiB,OAAV,CAAkBjB,SAAS,CAACkB,GAA5B;AADM,EAEfC,UAFF;AAIA,eAAehB,OAAO,CAACS,eAAD,CAAP,CAAyBJ,IAAzB,CAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport Question from '../components/Question';\nimport Timer from '../components/Timer';\nimport styles from '../styles/Game.module.css';\n\nclass Game extends Component {\n  render() {\n    const { answered } = this.props;\n    return (\n      <div className={ `${styles['game-container']}` }>\n        <Header />\n        <div className={ `${styles['timer-container']}` }>\n          {answered === 'respondido' ? (\n            <span className={ `${styles['timer-background']}` }>\n              0\n            </span>) : <Timer />}\n        </div>\n        <Question />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  answered: state.game.answered,\n});\n\nGame.propTypes = {\n  results: PropTypes.arrayOf(PropTypes.any),\n}.isRequired;\n\nexport default connect(mapStateToProps)(Game);\n"]},"metadata":{},"sourceType":"module"}