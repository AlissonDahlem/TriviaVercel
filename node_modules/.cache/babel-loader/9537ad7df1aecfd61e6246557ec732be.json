{"ast":null,"code":"var _jsxFileName = \"/home/alisson/Desktop/Projetos/TriviaVercel/src/components/Timer.jsx\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { answerQuestion, setTimer } from '../Redux/Actions';\nimport styles from '../styles/Game.module.css';\n\nclass Timer extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSeconds = () => {\n      this.setState(prevState => ({\n        seconds: prevState.seconds - 1\n      }));\n      const {\n        seconds\n      } = this.state;\n      const {\n        timer\n      } = this.props;\n      timer(seconds);\n    };\n\n    this.state = {\n      seconds: 30\n    };\n  }\n\n  componentDidMount() {\n    const interval = 1000;\n    this.counter = setInterval(() => {\n      this.handleSeconds();\n    }, interval);\n  }\n\n  componentDidUpdate() {\n    const {\n      seconds\n    } = this.state;\n    const {\n      setAnswer\n    } = this.props;\n\n    if (seconds === 0) {\n      clearInterval(this.counter);\n      setAnswer();\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.counter);\n  }\n\n  render() {\n    const {\n      seconds\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `${styles['timer-background']}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `${styles.timer}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, seconds));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  timer: seconds => dispatch(setTimer(seconds)),\n  setAnswer: () => dispatch(answerQuestion())\n});\n\nconst mapStateToProps = store => ({\n  answered: store.game.answered\n});\n\nTimer.propTypes = {\n  timer: PropTypes.number\n}.isRequired;\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);","map":{"version":3,"sources":["/home/alisson/Desktop/Projetos/TriviaVercel/src/components/Timer.jsx"],"names":["PropTypes","React","connect","answerQuestion","setTimer","styles","Timer","Component","constructor","handleSeconds","setState","prevState","seconds","state","timer","props","componentDidMount","interval","counter","setInterval","componentDidUpdate","setAnswer","clearInterval","componentWillUnmount","render","mapDispatchToProps","dispatch","mapStateToProps","store","answered","game","propTypes","number","isRequired"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,kBAAzC;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SA4BdC,aA5Bc,GA4BE,MAAM;AACpB,WAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC5BC,QAAAA,OAAO,EAAED,SAAS,CAACC,OAAV,GAAoB;AADD,OAAhB,CAAd;AAGA,YAAM;AAAEA,QAAAA;AAAF,UAAc,KAAKC,KAAzB;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAY,KAAKC,KAAvB;AACAD,MAAAA,KAAK,CAACF,OAAD,CAAL;AACD,KAnCa;;AAEZ,SAAKC,KAAL,GAAa;AACXD,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAEDI,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,QAAQ,GAAG,IAAjB;AAEA,SAAKC,OAAL,GAAeC,WAAW,CAAC,MAAM;AAC/B,WAAKV,aAAL;AACD,KAFyB,EAEvBQ,QAFuB,CAA1B;AAGD;;AAEDG,EAAAA,kBAAkB,GAAG;AACnB,UAAM;AAAER,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,UAAM;AAAEQ,MAAAA;AAAF,QAAgB,KAAKN,KAA3B;;AACA,QAAIH,OAAO,KAAK,CAAhB,EAAmB;AACjBU,MAAAA,aAAa,CAAC,KAAKJ,OAAN,CAAb;AACAG,MAAAA,SAAS;AACV;AACF;;AAEDE,EAAAA,oBAAoB,GAAG;AACrBD,IAAAA,aAAa,CAAC,KAAKJ,OAAN,CAAb;AACD;;AAWDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,wBACE;AAAK,MAAA,SAAS,EAAI,GAAER,MAAM,CAAC,kBAAD,CAAqB,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAI,GAAEA,MAAM,CAACS,KAAM,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCF,OAAvC,CADF,CADF;AAKD;;AA7CiC;;AAgDpC,MAAMa,kBAAkB,GAAIC,QAAD,KAAe;AACxCZ,EAAAA,KAAK,EAAGF,OAAD,IAAac,QAAQ,CAACtB,QAAQ,CAACQ,OAAD,CAAT,CADY;AAExCS,EAAAA,SAAS,EAAE,MAAMK,QAAQ,CAACvB,cAAc,EAAf;AAFe,CAAf,CAA3B;;AAKA,MAAMwB,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,QAAQ,EAAED,KAAK,CAACE,IAAN,CAAWD;AADa,CAAZ,CAAxB;;AAIAvB,KAAK,CAACyB,SAAN,GAAkB;AAChBjB,EAAAA,KAAK,EAAEd,SAAS,CAACgC;AADD,EAEhBC,UAFF;AAIA,eAAe/B,OAAO,CAACyB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CnB,KAA7C,CAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { answerQuestion, setTimer } from '../Redux/Actions';\nimport styles from '../styles/Game.module.css';\n\nclass Timer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      seconds: 30,\n    };\n  }\n\n  componentDidMount() {\n    const interval = 1000;\n\n    this.counter = setInterval(() => {\n      this.handleSeconds();\n    }, interval);\n  }\n\n  componentDidUpdate() {\n    const { seconds } = this.state;\n    const { setAnswer } = this.props;\n    if (seconds === 0) {\n      clearInterval(this.counter);\n      setAnswer();\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.counter);\n  }\n\n  handleSeconds = () => {\n    this.setState((prevState) => ({\n      seconds: prevState.seconds - 1,\n    }));\n    const { seconds } = this.state;\n    const { timer } = this.props;\n    timer(seconds);\n  }\n\n  render() {\n    const { seconds } = this.state;\n    return (\n      <div className={ `${styles['timer-background']}` }>\n        <span className={ `${styles.timer}` }>{seconds}</span>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  timer: (seconds) => dispatch(setTimer(seconds)),\n  setAnswer: () => dispatch(answerQuestion()),\n});\n\nconst mapStateToProps = (store) => ({\n  answered: store.game.answered,\n});\n\nTimer.propTypes = {\n  timer: PropTypes.number,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\n"]},"metadata":{},"sourceType":"module"}