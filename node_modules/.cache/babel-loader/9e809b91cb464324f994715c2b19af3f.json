{"ast":null,"code":"var _jsxFileName = \"/home/alisson/Desktop/Projetos/TriviaVercel/src/pages/Ranking.jsx\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { newGame } from '../Redux/Actions';\nimport styles from '../styles/Ranking.module.css';\n\nclass Ranking extends Component {\n  render() {\n    const {\n      playAgain\n    } = this.props;\n    const ranking = JSON.parse(localStorage.getItem('ranking'));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `${styles['ranking-background']}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `${styles['ranking-container']} col-10 m-auto`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      \"data-testid\": \"ranking-title\",\n      className: `${styles['ranking-title']} col-12`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }, \"Ranking\"), /*#__PURE__*/React.createElement(\"audio\", {\n      src: \"https://www.myinstants.com/media/sounds/queen-we-are-the-champions-mp3cut_0owsUJJ.mp3\",\n      autoPlay: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${styles['info-container']} col-12`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-11 m-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, ranking.sort((a, b) => b.score - a.score).map((player, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: `${styles['players-list']} col-8 m-auto mb-3`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `${styles['gravatar-container']} col-5`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: player.picture,\n      alt: \"Player gravatar\",\n      className: `${styles['gravatar-image']}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"col-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${styles['span-container']} col-5`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `${styles['span-div']}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `${styles['span-text']}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, \"Name:\"), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": `player-name-${index}`,\n      className: `${styles['span-result']}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, `${player.name}`)), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${styles['span-div']}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `${styles['span-text']}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, \"Score:\"), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": `player-score-${index}`,\n      className: `${styles['span-result']}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, `${player.score}`))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${styles['play-again-container']}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-go-home\",\n      onClick: playAgain,\n      className: `${styles.button}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, \"Play Again\")))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  playAgain: () => dispatch(newGame())\n});\n\nRanking.propTypes = {\n  playAgain: PropTypes.func\n}.isRequired;\nexport default connect(null, mapDispatchToProps)(Ranking);","map":{"version":3,"sources":["/home/alisson/Desktop/Projetos/TriviaVercel/src/pages/Ranking.jsx"],"names":["PropTypes","React","Component","connect","Link","newGame","styles","Ranking","render","playAgain","props","ranking","JSON","parse","localStorage","getItem","sort","a","b","score","map","player","index","picture","name","button","mapDispatchToProps","dispatch","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { newGame } from '../Redux/Actions';\nimport styles from '../styles/Ranking.module.css';\n\nclass Ranking extends Component {\n  render() {\n    const { playAgain } = this.props;\n    const ranking = JSON.parse(localStorage.getItem('ranking'));\n    return (\n      <div className={ `${styles['ranking-background']}` }>\n        <div className={ `${styles['ranking-container']} col-10 m-auto` }>\n\n          <h1\n            data-testid=\"ranking-title\"\n            className={ `${styles['ranking-title']} col-12` }\n          >\n            Ranking\n          </h1>\n          <audio src=\"https://www.myinstants.com/media/sounds/queen-we-are-the-champions-mp3cut_0owsUJJ.mp3\" autoPlay={true} />\n          <div className={ `${styles['info-container']} col-12` }>\n\n            {/* <div className=\"col-md-5 m-auto\">\n              <Podium />\n            </div> */}\n\n            <div className=\"col-11 m-auto\">\n              {\n                ranking.sort((a, b) => b.score - a.score).map((player, index) => (\n                  <div\n                    key={ index }\n                    className={ `${styles['players-list']} col-8 m-auto mb-3` }\n                  >\n                    <div className={ `${styles['gravatar-container']} col-5` }>\n                      <img\n                        src={ player.picture }\n                        alt=\"Player gravatar\"\n                        className={ `${styles['gravatar-image']}` }\n                      />\n                    </div>\n                    <span className=\"col-1\" />\n                    <div className={ `${styles['span-container']} col-5` }>\n                      <div className={ `${styles['span-div']}` }>\n                        <span className={ `${styles['span-text']}` }>\n                          Name:\n                        </span>\n                        <span\n                          data-testid={ `player-name-${index}` }\n                          className={ `${styles['span-result']}` }\n                        >\n                          {`${player.name}`}\n                        </span>\n                      </div>\n                      <div className={ `${styles['span-div']}` }>\n                        <span className={ `${styles['span-text']}` }>\n                          Score:\n                        </span>\n                        <span\n                          data-testid={ `player-score-${index}` }\n                          className={ `${styles['span-result']}` }\n                        >\n                          {`${player.score}`}\n                        </span>\n                      </div>\n                    </div>\n\n                  </div>\n                ))\n              }\n            </div>\n\n          </div>\n\n          <div className={ `${styles['play-again-container']}` }>\n            <Link to=\"/\">\n              <button\n                type=\"button\"\n                data-testid=\"btn-go-home\"\n                onClick={ playAgain }\n                className={ `${styles.button}` }\n              >\n                Play Again\n              </button>\n            </Link>\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  playAgain: () => dispatch(newGame()),\n});\n\nRanking.propTypes = {\n  playAgain: PropTypes.func,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(Ranking);\n"]},"metadata":{},"sourceType":"module"}