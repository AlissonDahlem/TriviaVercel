{"ast":null,"code":"var _jsxFileName = \"/home/alisson/Desktop/Projetos/sd-019-a-project-trivia-react-redux/src/pages/Login.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport logo from '../trivia.png';\nimport '../App.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.validateButton = () => {\n      const {\n        email,\n        name\n      } = this.state;\n      const minPasswordLength = 0; // Regex encontrado no link: https://www.w3resource.com/javascript/form/email-validation.php\n\n      const emailFormatRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n      if (name.length >= minPasswordLength && email.match(emailFormatRegex)) {\n        this.setState({\n          isButtonDisabled: false\n        });\n      } else {\n        this.setState({\n          isButtonDisabled: true\n        });\n      }\n    };\n\n    this.onInputChange = _ref => {\n      let {\n        target\n      } = _ref;\n      this.setState({\n        [target.name]: target.value\n      }, () => this.validateButton);\n    };\n\n    this.state = {\n      email: '',\n      name: '',\n      isButtonDisabled: true\n    };\n  }\n\n  render() {\n    const {\n      isButtonDisabled\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"nameInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"input-player-name\",\n      id: \"nameInput\",\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"gravatarEmailInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      id: \"gravatarEmailInput\",\n      \"data-testid\": \"input-gravatar-email\",\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      disabled: isButtonDisabled,\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, \"Play\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/alisson/Desktop/Projetos/sd-019-a-project-trivia-react-redux/src/pages/Login.jsx"],"names":["React","PropTypes","connect","logo","Login","Component","constructor","validateButton","email","name","state","minPasswordLength","emailFormatRegex","length","match","setState","isButtonDisabled","onInputChange","target","value","render","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAO,YAAP;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAUdC,cAVc,GAUG,MAAM;AACrB,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAkB,KAAKC,KAA7B;AACA,YAAMC,iBAAiB,GAAG,CAA1B,CAFqB,CAGrB;;AACA,YAAMC,gBAAgB,GAAG,6CAAzB;;AACA,UAAIH,IAAI,CAACI,MAAL,IAAeF,iBAAf,IAAoCH,KAAK,CAACM,KAAN,CAAYF,gBAAZ,CAAxC,EAAuE;AACrE,aAAKG,QAAL,CAAc;AACZC,UAAAA,gBAAgB,EAAE;AADN,SAAd;AAGD,OAJD,MAIO;AACL,aAAKD,QAAL,CAAc;AACZC,UAAAA,gBAAgB,EAAE;AADN,SAAd;AAGD;AACF,KAxBa;;AAAA,SA0BhBC,aA1BgB,GA0BA,QAAgB;AAAA,UAAf;AAAEC,QAAAA;AAAF,OAAe;AAC9B,WAAKH,QAAL,CAAc;AAAE,SAACG,MAAM,CAACT,IAAR,GAAeS,MAAM,CAACC;AAAxB,OAAd,EAA+C,MAAM,KAAKZ,cAA1D;AACD,KA5Be;;AAGZ,SAAKG,KAAL,GAAa;AACXF,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,IAAI,EAAE,EAFK;AAGXO,MAAAA,gBAAgB,EAAE;AAHP,KAAb;AAKD;;AAsBHI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA;AAAF,QAAuB,KAAKN,KAAlC;AACA,wBACE,uDAKE;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,qBAAY,mBAFd;AAGE,MAAA,EAAE,EAAC,WAHL;AAIE,MAAA,QAAQ,EAAG,KAAKO,aAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,eAcE;AAAO,MAAA,OAAO,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,EAAE,EAAC,oBAFL;AAGE,qBAAY,sBAHd;AAIE,MAAA,QAAQ,EAAG,KAAKA,aAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAdF,eAuBE;AACE,MAAA,QAAQ,EAAGD,gBADb;AAEE,MAAA,IAAI,EAAC,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF,CADF;AAgCD;;AAjEmC;;AAoEpC,MAAMK,kBAAkB,GAAIC,QAAD,KAAe,EAAf,CAA3B;;AAIA,eAAepB,OAAO,CAAC,IAAD,EAAOmB,kBAAP,CAAP,CAAkCjB,KAAlC,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport logo from '../trivia.png';\nimport '../App.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      name: '',\n      isButtonDisabled: true,\n    };\n  }\n\n  validateButton = () => {\n    const { email, name } = this.state;\n    const minPasswordLength = 0;\n    // Regex encontrado no link: https://www.w3resource.com/javascript/form/email-validation.php\n    const emailFormatRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (name.length >= minPasswordLength && email.match(emailFormatRegex)) {\n      this.setState({\n        isButtonDisabled: false,\n      });\n    } else {\n      this.setState({\n        isButtonDisabled: true,\n      });\n    }\n  }\n\nonInputChange = ({ target }) => {\n  this.setState({ [target.name]: target.value }, () => this.validateButton);\n}\n\nrender() {\n  const { isButtonDisabled } = this.state;\n  return (\n    <>\n      {/* <header className=\"App-header\">\n          <img src={ logo } className=\"App-logo\" alt=\"logo\" />\n        </header> */}\n\n      <label htmlFor=\"nameInput\">\n        <input\n          type=\"text\"\n          data-testid=\"input-player-name\"\n          id=\"nameInput\"\n          onChange={ this.onInputChange }\n        />\n      </label>\n\n      <label htmlFor=\"gravatarEmailInput\">\n        <input\n          type=\"email\"\n          id=\"gravatarEmailInput\"\n          data-testid=\"input-gravatar-email\"\n          onChange={ this.onInputChange }\n        />\n      </label>\n\n      <button\n        disabled={ isButtonDisabled }\n        type=\"button\"\n      >\n        Play\n      </button>\n    </>\n  );\n}\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}