{"ast":null,"code":"var _jsxFileName = \"/home/alisson/Desktop/Projetos/sd-019-a-project-trivia-react-redux/src/pages/Feedback.jsx\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\n\nclass Feedback extends Component {\n  render() {\n    const {\n      correctAnswers\n    } = this.props;\n    const TRES = 3;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"header-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }\n    }, \"Valor Atual\")), correctAnswers > TRES ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"feedback-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 15\n      }\n    }, \"Could be better...\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"feedback-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    }, \"Well Done!\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  correctAnswers: state.player.qtdCorrectAnswers\n});\n\nFeedback.propTypes = {\n  correctAnswers: PropTypes.number\n}.isRequired;\nexport default connect(mapStateToProps)(Feedback);","map":{"version":3,"sources":["/home/alisson/Desktop/Projetos/sd-019-a-project-trivia-react-redux/src/pages/Feedback.jsx"],"names":["PropTypes","React","Component","connect","Header","Feedback","render","correctAnswers","props","TRES","mapStateToProps","state","player","qtdCorrectAnswers","propTypes","number","isRequired"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC/BI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAqB,KAAKC,KAAhC;AACA,UAAMC,IAAI,GAAG,CAAb;AACA,wBACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,qBAAY,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAFF,EAMIF,cAAc,GAAGE,IAAjB,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,qBAAY,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADF,gBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,qBAAY,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAXN,CADF;AAmBD;;AAvB8B;;AA0BjC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCJ,EAAAA,cAAc,EAAEI,KAAK,CAACC,MAAN,CAAaC;AADK,CAAZ,CAAxB;;AAIAR,QAAQ,CAACS,SAAT,GAAqB;AACnBP,EAAAA,cAAc,EAAEP,SAAS,CAACe;AADP,EAEnBC,UAFF;AAIA,eAAeb,OAAO,CAACO,eAAD,CAAP,CAAyBL,QAAzB,CAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\n\nclass Feedback extends Component {\n  render() {\n    const { correctAnswers } = this.props;\n    const TRES = 3;\n    return (\n      <>\n        <Header />\n        <div>\n          <span data-testid=\"header-score\">Valor Atual</span>\n        </div>\n        {\n          correctAnswers > TRES ? (\n            <div>\n              <p data-testid=\"feedback-text\">Could be better...</p>\n            </div>\n          ) : (\n            <div>\n              <p data-testid=\"feedback-text\">Well Done!</p>\n            </div>\n          )\n        }\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  correctAnswers: state.player.qtdCorrectAnswers,\n});\n\nFeedback.propTypes = {\n  correctAnswers: PropTypes.number,\n}.isRequired;\n\nexport default connect(mapStateToProps)(Feedback);\n"]},"metadata":{},"sourceType":"module"}